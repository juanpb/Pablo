#Property: 
#Valores posibles:
#
#Valor default:


###############################################################################
#	Propiedades generales													  #
###############################################################################
#Property: ANTIALIASING
#Indica el algoritmo a usar para dibujar las fijuras. Con 'ON' se ve mejor, pero es más lento
#Valores posibles: ON, OFF
#Valor default: ON
ANTIALIASING = ON

#Property: SELECTED_COLOR
#Indica color del recuadro con el cual se marca que un compenente está seleccionado
#Valores posibles: Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default: green
SELECTED_COLOR = green

#Property: ROOT_PATH
#Indica el directorio raíz donde se abrirán los diálogos de Abrir y Guardar archivos.
#Valores posibles: Cualquier directorio, usando \\ como separador.
#Valor default: el directorio home del usuario
#ROOT_PATH =G:\\jmovics\\pb\\TestGraphic\\ejemplos
ROOT_PATH =

#Property: CLASS_PATH
#Indica el directorio raíz donde se abrirá el diálogo para elegir una clase
#Valores posibles: Cualquier directorio, usando \\ como separador. 
#Valor default: el directorio home del usuario
#CLASS_PATH =G:\\jmovics\\pb\\TestGraphic
CLASS_PATH =C:\\IntelliJ-IDEA-4.0\\JPB\\workflow\\classes

#Property: SPLASH_SCREEN_TIME
#Indica el tiempo, en milisegundos, que se mostrará el splash sreen
#Valores posibles: Cualquier número natural y el cero. 
#Valor default: 3000
SPLASH_SCREEN_TIME = 20000

###############################################################################
#	Propiedades del Container												  #
###############################################################################
#Property: CONTAINER_BACKGROUND
#Indica el color de background del container
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default: el de JPanel
#CONTAINER_BACKGROUND = green
CONTAINER_BACKGROUND = 227,223,217

#Property: CONTAINER_BACKGROUND_IMAGE
#Indica el color de background del container al generar una imagen
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default: el de JPanel
CONTAINER_BACKGROUND_IMAGE = white

###############################################################################
#	Propiedades del Estado													  #
###############################################################################
#Property: STATE_COLOR
#Indica el color de los estados
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:black
STATE_COLOR = 124,140,222

#Property: STATE_CANCEL_COLOR
#Indica el color de los estados que generan la cancelacion del proceso.
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:red
STATE_CANCEL_COLOR = 234,146,146

#Property: STATE_WIDTH
#Indica el ancho de los estados
#Valores posibles: los enteros positivos
#Valor default: 100
STATE_WIDTH = 60

#Property: STATE_HEIGHT
#Indica el alto de los estados
#Valores posibles: los enteros positivos
#Valor default: 100
STATE_HEIGHT = 40

#Property: MARK_WIDHT
#Indica el tamaño del hito que se dibujará al lado de un estado con hitos
#Valores posibles: los enteros positivos
#Valor default: 10
MARK_WIDHT = 6


#Property: MARK_COLOR
#Indica el color del hito que se dibujará al lado de un estado con hitos
#Valores posibles: Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default: green
MARK_COLOR = 85,106,163


###############################################################################
#	Propiedades de los shortcut												  #
###############################################################################

#Property: SHORT_CUT_COLOR
#Indica el color del short cut de estado.
#Valores posibles: Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default: green
SHORT_CUT_COLOR = 119,133,237

#Property: SHORT_CUT_WIDTH
#Indica el tamaño del shortuct que se dibujará 
#Valores posibles: los enteros positivos

SHORT_CUT_WIDTH = 60

#Property: SHORT_CUT_HEIGHT
#Indica el tamaño del shortuct que se dibujará 
#Valores posibles: los enteros positivos
SHORT_CUT_HEIGHT = 30


###############################################################################
#	Propiedades de la Función												  #
###############################################################################
#Property: FUNCTION_COLOR
#Indica el color de las funciones
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:black
# AHORA NO SE USA, REEMPLAZADO POR: FUNCTION_COLOR_SS, FUNCTION_COLOR_AS y FUNCTION_COLOR_CI
FUNCTION_COLOR = 127,152,139

#Property: FUNCTION_COLOR_SS
#Indica el color de las funciones Server sicrónicas
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:black 
FUNCTION_COLOR_SS = 107,152,139


#Property: FUNCTION_COLOR_SA
#Indica el color de las funciones Server asicrónicas
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:black
FUNCTION_COLOR_SA = 181,160,204


#Property: FUNCTION_COLOR_CI
#Indica el color de las funciones cliente interactivas
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:black
FUNCTION_COLOR_CI = 208,203,156


#Property: FUNCTION_COLOR_PE
#Indica el color de las funciones de tipo proceso especial
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:black
FUNCTION_COLOR_PE = 187,187,187

#Property: FUNCTION_WIDTH
#Indica el ancho de las funciones
#Valores posibles: los enteros positivos
#Valor default: 100
FUNCTION_WIDTH = 60

#Property: FUNCTION_HEIGHT
#Indica el ALTO de las funciones
#Valores posibles: los enteros positivos
#Valor default: 100
FUNCTION_HEIGHT = 40


###############################################################################
#	Propiedades de CONECTORES												  #
###############################################################################
#Property: CONNECTOR_IN_PARALlELISM_COLOR
#Indica el color de los conectores que formen parte de un paralelismo
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:red
CONNECTOR_IN_PARALlELISM_COLOR = 59,98,250

###############################################################################
#	Propiedades de PreFunciones												  #
###############################################################################
#Property: PRE_FUNCTION_COLOR
#Indica el color de las prefunciones
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:black
PRE_FUNCTION_COLOR = black

###############################################################################
#	Propiedades de PosFunciones												  #
###############################################################################
#Property: POS_FUNCTION_COLOR
#Indica el color de las posfunciones
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:black
POS_FUNCTION_COLOR = black

###############################################################################
#	Propiedades de Generales												  #
###############################################################################
#Property: COLOR_HIGHLIGHT
#Indica el color de los objetos resaltados.
#Valores posibles:Todos los colores definidos como constantes en java.awt.Color o con formato RGB (eg: 1,12,123)
#Valor default:
COLOR_HIGHLIGHT = 224,152,56 

